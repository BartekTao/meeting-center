directive @goModel(model: String, models: [String!]) on OBJECT
    | INPUT_OBJECT
    | SCALAR
    | ENUM
    | INTERFACE
    | UNION

directive @goField(forceResolver: Boolean, name: String, omittable: Boolean) on INPUT_FIELD_DEFINITION
    | FIELD_DEFINITION

scalar Int64

type Query {
  paginatedRooms(first: Int = 20, after: String): RoomConnection
  room(id: ID!): Room!
}

type Mutation {
  upsertRoom(room: UpsertRoomInput!): Room!
  deleteRoom(id: ID!): Room!
}

type Room @goModel(model: "github.com/BartekTao/nycu-meeting-room-api/internal/domain.Room") {
  id: ID!
  name: String!
  capacity: Int!
  equipments: [Equipment!]
  rules: [Rule!]
  isDelete: Boolean
}

enum Rule @goModel(model: "github.com/BartekTao/nycu-meeting-room-api/internal/domain.Rule") {
  NO_FOOD
  NO_DRINK
}

enum Equipment @goModel(model: "github.com/BartekTao/nycu-meeting-room-api/internal/domain.Equipment") {
  PROJECTOR
  TABLE
  TV
  CAMERA
}


type RoomConnection {
  edges: [RoomEdge]
  pageInfo: PageInfo!
}

type RoomEdge {
  node: Room
  cursor: String!
}

type PageInfo {
  startCursor: String
  endCursor: String
}

input UpsertRoomInput {
  id: ID
  name: String!
  capacity: Int!
  equipments: [Equipment!]
  rules: [Rule!]
}
